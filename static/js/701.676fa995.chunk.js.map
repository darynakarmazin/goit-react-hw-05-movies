{"version":3,"file":"static/js/701.676fa995.chunk.js","mappings":"sIACO,SAASA,EAAYC,GAU1B,OAAOC,MAAMD,EATG,CACdE,OAAQ,MACRC,QAAS,CACPC,OAAQ,mBACRC,cACE,gOAIqBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACpC,C,8ICVYC,EAAkBC,EAAAA,GAAAA,IAAH,0RAefC,EAAaD,EAAAA,GAAAA,KAAH,yiC,SCdhB,SAASE,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeA,OACE,SAACP,EAAD,WACE,UAACE,EAAD,CAAYE,SAXK,SAAAI,GACnBA,EAAMC,iBACqB,KAAvBH,EAAYI,SAGhBN,EAASE,GACTC,EAAe,IAChB,EAIuCI,UAAU,OAA9C,WACE,mBAAQC,KAAK,SAASD,UAAU,SAAhC,UACE,iBAAMA,UAAU,eAAhB,SAA+B,oBAGjC,kBACEE,SArBkB,SAAAL,GACxBD,EAAeC,EAAMM,cAAcC,MAAMC,cAC1C,EAoBOD,MAAOT,EACPK,UAAU,QACVC,KAAK,OACLK,aAAa,MACbC,WAAS,EACTC,YAAY,sBAKrB,C,gBCnCYC,EAAcnB,EAAAA,GAAAA,GAAH,wEAMXoB,GAAapB,EAAAA,EAAAA,IAAOqB,EAAAA,GAAPrB,CAAH,yD,SCJR,SAASsB,IACtB,OAAsClB,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMnC,EAAG,0DAAsDe,EAAtD,+CACThB,EAAAA,EAAAA,GAAYC,GACTM,MAAK,SAAA8B,GACJF,EAAUE,EACX,IACAC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAM,SAAWF,EAA7B,GACb,GAAE,CAACvB,IAMJ,OACE,iCACE,SAACH,EAAD,CAAWC,SANU,SAAAE,GACvBC,EAAeD,EAChB,IAKIkB,IACC,wBACGA,EAAOG,QAAQK,KAAI,SAAAC,GAClB,OACE,SAACb,EAAD,WACE,SAACC,EAAD,CAAYa,GAAE,UAAKD,EAAOE,IAA1B,UACE,uBAAIF,EAAOG,oBAFGH,EAAOE,GAM5B,QAKV,C","sources":["Api/fetchMovies.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.styled.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["\nexport function fetchMovies(url) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZDhlY2Y3NDVmNWJiZTUwZmM2NDhjMDg1OWZhMTcwMSIsInN1YiI6IjY0ODhjMTU2ZDJiMjA5MDBjYTIxNzA5NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.4vxGV4kBszJbv90PYcnQ1DUyBmnKxmAR_P1khjcXgUk',\n    },\n  };\n\n  return fetch(url, options).then(res => res.json());\n}\n","import styled from 'styled-components';\n\nexport const SearchbarHeader = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding: 12 24px;\n  z-index: 10;\n  margin: 0 auto;\n  background-color: #0a0909;\n  border-bottom: 1px solid #ffffff;\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n\n  button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  button:hover {\n    opacity: 1;\n  }\n\n  span {\n    font-size: 30px;\n  }\n\n  button-label {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 20px;\n    padding-right: 4px;\n  }\n\n  input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { SearchbarHeader, SearchForm } from './Searchbar.styled';\n\nexport function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleQueryChange = event => {\n    setSearchQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      return;\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <SearchbarHeader>\n      <SearchForm onSubmit={handleSubmit} className=\"form\">\n        <button type=\"submit\" className=\"button\">\n          <span className=\"button-label\">&#128269;</span>\n        </button>\n\n        <input\n          onChange={handleQueryChange}\n          value={searchQuery}\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search Movies\"\n        />\n      </SearchForm>\n    </SearchbarHeader>\n  );\n}\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MoviesTitle = styled.li`\n  color: #e6e6e6;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const MoviesItem = styled(NavLink)`\n  color: #e6e6e6;\n  margin: 0;\n`;\n","import { Searchbar } from 'components/Searchbar/Searchbar';\nimport React, { useEffect, useState } from 'react';\nimport { MoviesItem, MoviesTitle } from './Movies.styled';\nimport { fetchMovies } from '../../Api/fetchMovies';\n\nexport default function Movies() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState('');\n\n  useEffect(() => {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&include_adult=false&language=en-US&page=1`;\n    fetchMovies(url)\n      .then(results => {\n        setMovies(results);\n      })\n      .catch(err => console.error('error:' + err));\n  }, [searchQuery]);\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      {movies && (\n        <ul>\n          {movies.results.map(result => {\n            return (\n              <MoviesTitle key={result.id}>\n                <MoviesItem to={`${result.id}`}>\n                  <p>{result.original_title}</p>\n                </MoviesItem>\n              </MoviesTitle>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["fetchMovies","url","fetch","method","headers","accept","Authorization","then","res","json","SearchbarHeader","styled","SearchForm","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","event","preventDefault","trim","className","type","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","MoviesTitle","MoviesItem","NavLink","Movies","movies","setMovies","useEffect","results","catch","err","console","error","map","result","to","id","original_title"],"sourceRoot":""}